#include <dos.h>
#include <conio.h>
#include <stdio.h>
#include <stdlib.h>

int sendCode(int code);

void interrupt(*old)(...);

void interrupt newKeyboard(...) {
	char buf[5];
	unsigned char c = inp(0x60);//получить значение из порта 60
	if (c != 0xFA) {
		//Она сбрасывает interrupt flag (IF) в регистре EFLAGS. Когда этот флаг сброшен процессор игнорирует все прерывания от внешних устройств(клавиатура, мышьБ игравые манипуляторы и тд)
		//Опкод данной инструкции — 0xFA
		//преобразуем номер нажатой клавиши в строку
		itoa(c, buf, 16);//c в buf в 16-ричной сс
		cputs("Pressed button: 0x");//выводит в текущее текстовое окно строку
		cputs(buf); //выводит в текущее текстовое окно строку, на которую указывает параметр(вывод buf)
		cputs("\n\r");
	}
	(*old)();
}

void main() {
	clrscr();//очищает строку от текущей позиции курсора и до конца строки активного окна. Позиция курсора не изменяется.
	//Определяет старый обработчик прерывания 0x09 (клавиатура) и пишет в переменную old (которая является указателем на функцию). 
	//Затем ставит свой обработчик на то же (0x09) прерывание. Выходит из проги (return 0). Теперь, если происходит девятое прерывание,
	//процессор делает джамп по адресу нашей функции newhdl(). 
	old = getvect(0x09);
	setvect(0x09, newKeyboard);
	printf("Press any key\n");
	printf("ESC-exit\n");

	int maskKey;
	while (1) {
		//2 - Caps Lock
		//1 - Num Lock
		//0 - Scroll Lock
		//чередуем включение светодиодов
		//биты маски:    (1-включить, 0-выключить)
		for (maskKey = 0; maskKey < 8; maskKey++) {
			if (kbhit()) {//возвращает истину, если нажата какая-либо клавиша на клавиатуре
				//если ESC
				if (getch() == 0x1B) {
					//восстанавливаем старый обработчик
					setvect(0x09, old);
					return;
				}
			}
			if (sendCode(0xED)) {
				//если 3 раза произошла ошибка
				//восстанавливаем старый обработчик
				setvect(0x09, old);
				return;
			}
			if (sendCode(maskKey)) {
				setvect(0x09, old);
				return;
			}
			delay(100);
		}
	}
}

int sendCode(int code) {
	int tryCounter = 0;
	//проверить наличие данных во входном буфере клавиатуры
	//ожидать перехода в 0 бита 1
	//регистра состояния контроллера клавиатуры 64h
	while ((inp(0x64) & 0x2) != 0);//была нажата клавиша или отпущена

	//если произошла ошибка (код возврата FE в порту 60h)
	//повторить попытку до трех раз
	do {
		tryCounter++;
		outp(0x60, code);
	} while (inp(0x60) == 0xFE && tryCounter < 3);
	if (tryCounter == 3) return 1; //3 раза произошла ошибка отправки
	else return 0; //байт обработан успешно
}
